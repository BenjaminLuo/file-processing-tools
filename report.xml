<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="8" time="3.971" timestamp="2024-02-02T08:35:29.300780" hostname="HC446840"><testcase classname="tests.test_png_processor" name="test_png_metadata[tests/resources/test_files/Health_Canada_logo.png-GIF-P-303-0]" time="0.045"><failure message="assert 40 == 0">path = 'tests/resources/test_files/Health_Canada_logo.png', original_format = 'GIF', mode = 'P', width = 303, height = 0

    @pytest.mark.parametrize(variable_names, values)
    def test_png_metadata(path, original_format, mode, width, height):
        file_obj = File(path)
        assert file_obj.metadata['original_format'] == original_format
        assert file_obj.metadata['mode'] == mode
        assert file_obj.metadata['width'] == width
&gt;       assert file_obj.metadata['height'] == height
E       assert 40 == 0

tests\test_png_processor.py:24: AssertionError</failure></testcase><testcase classname="tests.test_png_processor" name="test_png_metadata[tests/resources/test_files/MapCanada.png-PNG-RGBA-3000-2408]" time="0.074" /><testcase classname="tests.test_png_processor" name="test_save_png_metadata[tests/resources/test_files/Health_Canada_logo.png-GIF-P-303-0]" time="0.035"><failure message="assert 40 == 0">copy_file = 'C:\\Users\\BLUO\\AppData\\Local\\Temp\\pytest-of-BLUO\\pytest-342\\copy0\\Health_Canada_logo.png'
original_format = 'GIF', mode = 'P', width = 303, height = 0

    @pytest.mark.parametrize(variable_names, values)
    def test_save_png_metadata(copy_file, original_format, mode, width, height):
&gt;       test_png_metadata(copy_file, 'PNG', mode, width, height)

tests\test_png_processor.py:29: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

path = 'C:\\Users\\BLUO\\AppData\\Local\\Temp\\pytest-of-BLUO\\pytest-342\\copy0\\Health_Canada_logo.png', original_format = 'PNG'
mode = 'P', width = 303, height = 0

    @pytest.mark.parametrize(variable_names, values)
    def test_png_metadata(path, original_format, mode, width, height):
        file_obj = File(path)
        assert file_obj.metadata['original_format'] == original_format
        assert file_obj.metadata['mode'] == mode
        assert file_obj.metadata['width'] == width
&gt;       assert file_obj.metadata['height'] == height
E       assert 40 == 0

tests\test_png_processor.py:24: AssertionError</failure></testcase><testcase classname="tests.test_png_processor" name="test_save_png_metadata[tests/resources/test_files/MapCanada.png-PNG-RGBA-3000-2408]" time="0.479" /><testcase classname="tests.test_png_processor" name="test_png_invalid_save_location[tests/resources/test_files/Health_Canada_logo.png]" time="0.013" /><testcase classname="tests.test_png_processor" name="test_png_invalid_save_location[tests/resources/test_files/MapCanada.png]" time="0.127" /><testcase classname="tests.test_png_processor" name="test_not_opening_file[tests/resources/test_files/Health_Canada_logo.png]" time="0.008" /><testcase classname="tests.test_png_processor" name="test_not_opening_file[tests/resources/test_files/MapCanada.png]" time="0.007" /></testsuite></testsuites>